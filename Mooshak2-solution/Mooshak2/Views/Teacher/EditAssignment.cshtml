@using Mooshak2.Services
@model Mooshak2.Models.EditAssignmentViewModel

@{
    ViewBag.Title = "EditAssignment";
}

<div class="container container-custom">
	<div class="row">
		<div class="col-md-2">
			<nav class="w3-sidenav w3-white w3-card-2 custom-nav">
				@if (Model.NavModel.Count == 0)
				{
					<p>No courses</p>
				}
				else
				{
					foreach (var c in Model.NavModel)
					{
						<h4 class="h4-custom">@c.Name</h4>
						if (c.Assignments.Count == 0)
						{
							<p>No Assignments</p>
						}
						else
						{
							foreach (var a in c.Assignments)
							{
								<div class="w3-accordion">
									<a href="#" class="accordion-anchor custom-navanchor">@a.Name <i class="fa fa-angle-down custom-icon" aria-hidden="true"></i></a>
									<div class="w3-accordion-content w3-white w3-card-4 custom-navanchor">
										@foreach (var m in a.Milestones)
										{
											@Ajax.ActionLink(m.Name, "ContentRender", "Teacher", new { id = m.Id }, new AjaxOptions() { UpdateTargetId = "content", InsertionMode = InsertionMode.Replace }, new { @class = "custom-milestoneanchor" })
										}
									</div>
								</div>
							}
						}
						@Ajax.ActionLink("Add assignment", "CreateAssignment", "Teacher", new { id = c.Id }, new AjaxOptions() { UpdateTargetId = "content", InsertionMode = InsertionMode.Replace }, new { @class = "custom-adder" })
					}
				}
			</nav>
		</div>
		<div id="content" class="col-md-10">
			<h4>Edit Assignment</h4>
			<hr/>
			@{
				using (Html.BeginForm("EditAssignment", "Teacher", FormMethod.Post, new { enctype = "multipart/form-data", id = "assignmentform" }))
				{
					<div class="container">
						<div class="row">
							<div class="form-group">
								<label class="control-label">Assignment Name</label>
								<div>
									@Html.HiddenFor(x => Model.CourseId)
									@Html.HiddenFor(x => Model.AssignId)
									@Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
									@Html.TextBoxFor(x => x.Name, Model.Name, new {@class = "form-control col-md-5"})
								</div>
								<div>
									@Html.ActionLink("Delete assignment", "DeleteAssignment", new { Id = Model.AssignId }, new { @class = "btn btn-danger deleteassignment" })
								</div>
							</div>
						</div>
						<div class="row milestonepadding floater">
							<div class="form-group">
								<div class="col-md-3">
									<label class="control-label">Date Open:</label>
									@Html.TextBoxFor(x => x.DateOpen, Model.DateOpen)
								</div>
								<div class="col-md-3">
									<label class="control-label">Date Close:</label>
									@Html.TextBoxFor(x => x.DateClose, Model.DateClose)
								</div>
								@Html.ActionLink("Cancel", "Index", "", new { @class = "btn btn-default cancelassignment" })
							</div>
						</div>
					</div>
					<div class="container">
						<div class="form-group">
							<div class="row">
								<label class="control-label milestonepadding">Milestones:</label>
							</div>
							<label class="control-label ">Title:</label>
							<label class="control-label weightlabel">Weight:</label>
							@foreach (var item in Model.Milestones)
							{
								@Html.HiddenFor(x => item.Id)
								<div class="milestonepadding">
									@Html.TextBoxFor(x => item.Name, item.Name, new {placeholder = "title", @class = "form-control milestonefloat"})
									@Html.TextBoxFor(x => item.Weight, item.Weight.ToString(), new {placeholder = "Weight", @class = "form-control milestonefloat"})
									<span class="btn btn-default btn-file">
										Browse <input type="file" name="milestones[0].file" />
									</span>
								</div>
							}
						</div>
					</div>
					<div class="form-group">
						<div class="col-xs-5 col-xs-offset-1">
							<button type="submit" class="btn btn-default">Submit</button>
						</div>
					</div>
				}
			}
		</div>
		</div>
	</div>

